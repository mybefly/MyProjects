__author__ = "zhaichuang"
import os,json,paramiko,time
class readHar():
    def __init__(self,harfilePath,islocal=1,level=1,sqlmap='/Users/zhaichuang/Downloads/sqlmapproject-sqlmap-1c737d7'):
        '''
        :param level: 检测级别
        :param harfilePath:  har 源文件路径
        :param sqlmap:       sqlmap路径
        :return:
        '''
        self.level=level
        self.is_local=islocal
        self.sqlMapPath=sqlmap
        self.harpath = os.path.abspath(harfilePath)
        if os.path.isfile(self.harpath):
            self.basePath = os.path.abspath(self.harpath.split("/")[-2])
            self.platName=self.harpath.split("/")[-2]

            if os.path.isdir(self.basePath+"/%s_shfiles"%self.platName):
                self.shpath = self.basePath+"/%s_shfiles"%self.platName
            else:
                os.mkdir(self.basePath+"/%s_shfiles"%self.platName)
                self.shpath = self.basePath+"/%s_shfiles"%self.platName
            #-----logfile
            if os.path.isdir(self.basePath+"/%s_logfiles"%self.platName):
                self.logPath = self.basePath+"/%s_logfiles"%self.platName
            else:
                os.mkdir(self.basePath+"/%s_logfiles"%self.platName)
                self.logPath = self.basePath+"/%s_logfiles"%self.platName
            #-----result
            if os.path.isdir(self.basePath+"/%s_result"%self.platName):
                self.resPath = self.basePath+"/%s_result"%self.platName
            else:
                os.mkdir(self.basePath+"/%s_result"%self.platName)
                self.resPath = self.basePath+"/%s_result"%self.platName
            # print(self.harpath.split("/")[-2])
            # print(self.harpath)
            # print(self.logPath)
            # print(self.resPath)
        else:
            print("输入的har文件不存在")
    def readHarFile_Client(self,sqlmapth="",logpath="",level=""):
        '''
        读取har文件并生成sh文件
        :return:
        '''
        if self.is_local:
            pass
        else:
            self.sqlMapPath=sqlmapth
            self.logPath=logpath
            self.level=level
        getRequestList=[]
        postRequestList=[]
        if os.path.isfile(os.path.abspath(self.harpath)):
            with open(self.harpath,"r") as hf:
                harDic = json.loads(hf.read()) #将读取的文件转换成字典
                interface_info=harDic["log"]["entries"]
                # os.system("rm -rf %s/*"%self.shpath)
                for i in range(len(interface_info)):
                    reMethod = interface_info[i]["request"]["method"]
                    reUrl = interface_info[i]["request"]["url"]
                    if reMethod=="GET":
                       tmp1=reUrl.split("&")[:2] # 获取url
                       tmp2=reUrl.split("&")
                       tmp1="&".join(tmp1)+"="+str(+len(tmp2))
                       if tmp1 not in getRequestList:
                          getRequestList.append(tmp1)
                          with open(self.shpath+"/%d.sh"%i,"w") as shf:
                               shf.write("#!/bin/bash\n")
                               shf.write('python %s/sqlmap.py -u "%s" --level=%s --batch >>%s/%d.log'%(self.sqlMapPath,reUrl,self.level,self.logPath,i))
                               os.system("chmod 777 %s/%d.sh"%(self.shpath,i))
                    if reMethod=="POST":
                            oneRequestParams=[]
                            pars=[]
                            params = interface_info[i]["request"]["postData"]["params"]
                            for p in params:
                                oneRequestParams.append(p["name"])
                                pars.append("%s=%s"%(p["name"],p["value"]))
                            #print(oneRequestParams)
                            postTmp1=reUrl
                            postTmp2="&".join(oneRequestParams)
                            postTmp3=str(len(oneRequestParams))
                            postTmp ="%s&%s==%s"%(postTmp1,postTmp2,postTmp3)
                            if postTmp not in postRequestList:
                                postRequestList.append(postTmp)
                                with open(self.shpath+"/%d.sh"%i,"w") as shf2:
                                    par = "&".join(pars)
                                    shf2.write("#!/bin/bash\n")
                                    print('python %s/sqlmap.py -u "%s" --data "%s" --level=%s  --batch >>%s/%d.log'%(self.sqlMapPath,reUrl,par,self.level,self.logPath,i))
                                    shf2.write('python %s/sqlmap.py -u "%s" --data "%s" --level=%s --batch >>%s/%d.log'%(self.sqlMapPath,reUrl,par,self.level,self.logPath,i))
                                    os.system("chmod 777 %s/%d.sh"%(self.shpath,i))
                                    print(i)
                            # print(reUrl)
                            # print(par+"\n")
        else:
            print("文件不存在")

    def readHarFile_MS(self):
        getRequestList=[]
        postRequestList=[]
        if os.path.isfile(self.harpath):
            with open(self.harpath,"r") as hf:
                harDic = json.loads(hf.read()) #将读取的文件转换成字典
                interface_info=harDic["log"]["entries"]
                # os.system("rm -rf %s/*"%self.shpath)
                for i in range(len(interface_info)):
                    reMethod = interface_info[i]["request"]["method"]
                    reUrl = interface_info[i]["request"]["url"]
                    if reMethod=="GET":
                       print(reUrl)
                       tmp1=reUrl.split("&")[:2] # 获取url
                       print(tmp1)
                       tmp2=reUrl.split("&")
                       tmp1="&".join(tmp1)+"="+str(+len(tmp2))
                       if tmp1 not in getRequestList:
                          print(reUrl,1)
                          getRequestList.append(tmp1)
                          with open(self.shpath+"/%d.sh"%i,"w") as shf:
                               shf.write("#!/bin/bash\n")
                               shf.write('python %s/sqlmap.py -u "%s" --batch >>%s/%d.log'%(self.sqlMapPath,reUrl,self.logPath,i))
                               os.system("chmod 777 %s/%d.sh"%(self.shpath,i))
                    if reMethod=="POST":
                            print(reUrl)
                            oneRequestParams=[]
                            pars=[]
                            try:
                                params = interface_info[i]["request"]["postData"]["params"]
                                #print(params)
                                for p in params:
                                    oneRequestParams.append(p["name"])
                                    pars.append("%s=%s"%(p["name"],p["value"]))
                                #print(oneRequestParams)
                                postTmp1=reUrl
                                postTmp2="&".join(oneRequestParams)
                                postTmp3=str(len(oneRequestParams))
                                postTmp ="%s&%s==%s"%(postTmp1,postTmp2,postTmp3)
                                if postTmp not in postRequestList:
                                    postRequestList.append(postTmp)
                                    with open(self.shpath+"/%d.sh"%i,"w") as shf2:
                                        par = "&".join(pars)
                                        shf2.write("#!/bin/bash\n")
                                        shf2.write('python %s/sqlmap.py -u "%s" --data "%s" --level=%s --batch >>%s/%d.log'%(self.sqlMapPath,reUrl,par,self.level,self.logPath,i))
                                        os.system("chmod 777 %s/%d.sh"%(self.shpath,i))
                                    #print(par.split("&")[:2]) #获取接口名称
                            except:
                                continue
    def readShTorun(self):
        '''
        读取sh文件目录并运行
        :return:
        '''
        count=0
        if os.path.isdir(self.shpath):
            for f in os.listdir(self.shpath):
                os.system("rm -rf /Users/zhaichuang/.sqlmap/output/*")
                count=count+1
                print("运行次数:%s 文件:%s 正在运行.."%(count,f))
                os.system("sh %s/%s"%(self.shpath,f))
                print("sh %s/%s"%(self.shpath,f))
        else:
            print("sh目录不存在")
    def countResult(self):
        '''
        读取结果
        :return:
        '''
        count=1
        tmp=[]
        if os.path.isdir(self.logPath):
            for f in os.listdir(self.logPath):
                if os.path.isfile("%s/%s"%(self.logPath,f)) and f.split(".")[1]=="log":
                    with open("%s/%s"%(self.logPath,f),"r") as lf,\
                         open("%s/result.txt"%(self.resPath),"a") as rf:
                            for i in lf :
                               if "Parameter: " in i:
                                   with open("%s/%s.sh"%(self.shpath,f.split(".")[0]),"r") as sf:
                                         urlr=sf.readlines()[1]
                                         # print(urlr)
                                         urlall = urlr.split(" ")
                                         url = urlall[3].replace('"','')
                                         urldata = urlall[5].replace('"','')
                                         if "--data" in urlr:
                                            wurl="%s?%s".replace("\"","")%(url,urldata)
                                         else:
                                             wurl=url
                                         p = i.strip().split(":")[1]
                                         # if p not in tmp:
                                         #     tmp.append(p)
                                         #     print("注入参数:%s"%p)
                                         #rf.write("===========%d===========\n"%count)
                                         #rf.write("注入参数:%s\n"%(i.strip().split(":")[1]))
                               if "Type:" in i:
                                     type=i.strip().split("Type:")[1].strip()
                                     #print("注入类型:%s \n"%type)
                                    # rf.write("注入类型:%s \n"%type)
                               if "Title:" in i:
                                     title = i.strip().split("Title:")[1].strip()
                                     #print("标题:%s \n"%title)
                                     #rf.write("标题:%s \n"%(i.strip().split("Title:")[1].strip()))
                               if "Payload: " in i :
                                   interfaceName=i.strip().split("&")[1].split("=")[1]
                                   data = i.strip().split("Payload:")[1].strip()
                                   if interfaceName not in tmp:
                                       tmp.append(interfaceName)
                                       print("接口名称: %s"%interfaceName)
                                   if p not in tmp:
                                         tmp.append(p)
                                         print(p)
                                   if type not in tmp:
                                        tmp.append(type)
                                        print(type)
                                   if title not in tmp:
                                         tmp.append(title)
                                         print(title)
                                   if data not in tmp:
                                       tmp.append(data)
                                       print("注入数据:%s "%data)

                                   # print(count,"!!!!!!")
                                   # print("注入参数:%s"%param)
                                   # print("注入类型:%s"%type )
                                   # print("标题:%s"%title)
                                   # print("接口名称: %s"%interfaceName)
                                   # print("注入URL: %s"%url)
                                   # print("注入数据:%s "%(i.strip().split("Payload:")[1].strip()))
                                   # print("源完整URL:%s \n"%wurl)
                                   # print("".center(50,"-"))
                                   # content = '''接口名称: %s\n注入URL: %s?\n注入数据:%s\n源完整URL:%s \n'''%(interfaceName,url,i.strip().split("Payload:")[1],wurl)
                                   # print("content===%s"%content)
                                   #rf.write(content)
                                   count+=1
            # print(tmp)
        else:
            print("log目录不存在")

class connHost():
    '''
    链接远端服务器,然后上传脚本并执行命令
    将结果发送回来
    '''
    def __init__(self,host,port,username,password):
        self.host=host
        self.port=port
        self.username=username
        self.password=password
    def conn_exec(self,cmd):
        try:
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(hostname=self.host,username=self.username,password=self.password)
            stdin,stdout,stderr = ssh.exec_command(cmd)
            return stdout.readlines()
        except Exception as e:
            print(e)
    def put_file(self,localPath,remotepath):
        try:
            t=paramiko.Transport((self.host,self.port))
            t.connect(username=self.username,password=self.password)
            sftp=paramiko.SFTPClient.from_transport(t)
            sftp.put(localPath,remotepath)
            t.close()
        except Exception as e:
            print(e)
    def get_file(self,remotepath,localhost):
        try:
            t=paramiko.Transport((self.host,self.port))
            t.connect(username=self.username,password=self.password)
            sftp=paramiko.SFTPClient.from_transport(t)
            sftp.put(remotepath,localhost)
            t.close()
        except Exception as e:
            print(e)
if __name__=="__main__":
    wh_client = readHar("Client/1114_Gjclient.har",islocal=1)
    # wh_client.readHarFile_Client(sqlmapth="/home/sqlmap",logpath="/home/GJ_MS/logfiles",level=1)
    # wh_client.readShTorun()
    #  wh_client.countResult()
    #wh_ms= readHar("MS/gaojiao.har",islocal=1)
    #wh_ms.countResult()
    # wh_ms.readHarFile_MS()
    # wh_ms.readShTorun()
    wh_client.countResult()
