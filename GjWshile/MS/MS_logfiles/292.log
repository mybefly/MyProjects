        ___
       __H__
 ___ ___["]_____ ___ ___  {1.0.12.16#dev}
|_ -| . [.]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 18:28:42

[18:28:42] [INFO] testing connection to the target URL
[18:28:42] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS
[18:28:42] [CRITICAL] heuristics detected that the target is protected by some kind of WAF/IPS/IDS
do you want sqlmap to try to detect backend WAF/IPS/IDS? [y/N] N
[18:28:42] [WARNING] dropping timeout to 10 seconds (i.e. '--timeout=10')
[18:28:42] [INFO] testing if the target URL is stable
[18:28:43] [INFO] target URL is stable
[18:28:43] [INFO] testing if POST parameter 'm' is dynamic
[18:28:43] [INFO] confirming that POST parameter 'm' is dynamic
[18:28:43] [INFO] POST parameter 'm' is dynamic
[18:28:43] [WARNING] heuristic (basic) test shows that POST parameter 'm' might not be injectable
[18:28:44] [INFO] testing for SQL injection on POST parameter 'm'
[18:28:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:28:44] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:28:44] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:28:44] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:28:45] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:28:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:28:45] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:28:45] [INFO] testing 'MySQL inline queries'
[18:28:45] [INFO] testing 'PostgreSQL inline queries'
[18:28:45] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:28:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:28:45] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:28:45] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:28:45] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:28:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:28:45] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:28:46] [INFO] testing 'Oracle AND time-based blind'
[18:28:46] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:28:46] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it with option '--dbms'
[18:28:47] [WARNING] POST parameter 'm' does not seem to be injectable
[18:28:47] [INFO] testing if POST parameter 'a' is dynamic
[18:28:47] [INFO] confirming that POST parameter 'a' is dynamic
[18:28:47] [INFO] POST parameter 'a' is dynamic
[18:28:47] [WARNING] heuristic (basic) test shows that POST parameter 'a' might not be injectable
[18:28:47] [INFO] testing for SQL injection on POST parameter 'a'
[18:28:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:28:48] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:28:48] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:28:48] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:28:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:28:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:28:48] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:28:48] [INFO] testing 'MySQL inline queries'
[18:28:48] [INFO] testing 'PostgreSQL inline queries'
[18:28:48] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:28:48] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:28:49] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:28:49] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:28:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:28:49] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:28:49] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:28:49] [INFO] testing 'Oracle AND time-based blind'
[18:28:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:28:50] [WARNING] POST parameter 'a' does not seem to be injectable
[18:28:50] [INFO] testing if POST parameter 'device_type' is dynamic
[18:28:50] [INFO] confirming that POST parameter 'device_type' is dynamic
[18:28:50] [INFO] POST parameter 'device_type' is dynamic
[18:28:50] [WARNING] heuristic (basic) test shows that POST parameter 'device_type' might not be injectable
[18:28:51] [INFO] testing for SQL injection on POST parameter 'device_type'
[18:28:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:28:51] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:28:51] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:28:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:28:52] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:28:52] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:28:52] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:28:52] [INFO] testing 'MySQL inline queries'
[18:28:52] [INFO] testing 'PostgreSQL inline queries'
[18:28:52] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:28:52] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:28:52] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:28:53] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:28:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:28:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:28:53] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:28:53] [INFO] testing 'Oracle AND time-based blind'
[18:28:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:28:54] [WARNING] POST parameter 'device_type' does not seem to be injectable
[18:28:54] [INFO] testing if POST parameter 'school' is dynamic
[18:28:55] [INFO] confirming that POST parameter 'school' is dynamic
[18:28:55] [INFO] POST parameter 'school' is dynamic
[18:28:55] [WARNING] heuristic (basic) test shows that POST parameter 'school' might not be injectable
[18:28:55] [INFO] testing for SQL injection on POST parameter 'school'
[18:28:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:28:56] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:28:56] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:28:56] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:28:56] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:28:56] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:28:56] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:28:56] [INFO] testing 'MySQL inline queries'
[18:28:56] [INFO] testing 'PostgreSQL inline queries'
[18:28:56] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:28:56] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:28:57] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:28:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:28:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:28:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:28:57] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:28:57] [INFO] testing 'Oracle AND time-based blind'
[18:28:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:28:59] [WARNING] POST parameter 'school' does not seem to be injectable
[18:28:59] [INFO] testing if POST parameter 'verify' is dynamic
[18:28:59] [INFO] confirming that POST parameter 'verify' is dynamic
[18:28:59] [INFO] POST parameter 'verify' is dynamic
[18:28:59] [WARNING] heuristic (basic) test shows that POST parameter 'verify' might not be injectable
[18:28:59] [INFO] testing for SQL injection on POST parameter 'verify'
[18:28:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:29:00] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:29:00] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:29:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:29:00] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:29:01] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:29:01] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:29:01] [INFO] testing 'MySQL inline queries'
[18:29:01] [INFO] testing 'PostgreSQL inline queries'
[18:29:01] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:29:01] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:29:01] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:29:01] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:29:01] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:29:02] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:29:02] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:29:02] [INFO] testing 'Oracle AND time-based blind'
[18:29:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:29:04] [WARNING] POST parameter 'verify' does not seem to be injectable
[18:29:04] [INFO] testing if POST parameter 'secManager_id' is dynamic
[18:29:04] [WARNING] POST parameter 'secManager_id' does not appear to be dynamic
[18:29:04] [WARNING] heuristic (basic) test shows that POST parameter 'secManager_id' might not be injectable
[18:29:04] [INFO] testing for SQL injection on POST parameter 'secManager_id'
[18:29:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:29:05] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[18:29:05] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[18:29:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:29:06] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:29:06] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:29:06] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[18:29:06] [INFO] testing 'MySQL inline queries'
[18:29:06] [INFO] testing 'PostgreSQL inline queries'
[18:29:06] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[18:29:06] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:29:06] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:29:06] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:29:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[18:29:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:29:07] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:29:07] [INFO] testing 'Oracle AND time-based blind'
[18:29:08] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:29:09] [WARNING] POST parameter 'secManager_id' does not seem to be injectable
[18:29:09] [CRITICAL] all tested parameters appear to be not injectable. Try to increase '--level'/'--risk' values to perform more tests. Also, you can try to rerun by providing either a valid value for option '--string' (or '--regexp'). If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could retry with an option '--tamper' (e.g. '--tamper=space2comment')

[*] shutting down at 18:29:09

